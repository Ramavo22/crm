spring.datasource.url=jdbc:mysql://localhost:3306/crm?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

spring.security.oauth2.client.registration.google.client-id=clientID
spring.security.oauth2.client.registration.google.client-secret=client-secret
spring.security.oauth2.client.registration.google.scope=openid,email,profile
!
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline
# Customize the login page URL to include access_type=offline
spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}

# spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token


weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=b0bbff886f7b4495ad2124437252003

app.base-url=http://localhost:8080/

company.name=Easy to build
